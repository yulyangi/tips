Physical layer
  ethtool <interface>                         # check Speed, Duplex, Link detected, port and others
  ethtool -S <interface>                      # check stats of interface, errors)
  ethtool -S <interface> online               # test your interface
Data Link layer
  ifconfig <interface>                        # check your interface
  ip addr <interface>                         # check your interface
  ping <ip>
  ping -s 1000 -M do <server_ip>              # send 1000 byte packet to <server_ip> with no fragmentation
  arp -a                                      # shows ip and mac addresses table, if host have mac in that table that means host is reacheble
  ip nei                                      # shows ip and mac addresses table, if host have mac in that table that means host is reacheble
Network layer
  ip route                                    # shows route table on machine  
  ip route default via <default_gateway_ip>   # add default gateway for subnet
  traceroute <ip_need_to_check>               # shows all hops on way, first should be default gateway
Transport layer
  netstat                                     # shows all internet connections
  netstat -lntp | grep <ip>                     # shows all tcp connections to <ip>
  ss -lntp                                     # run this command on your server, it shows opened ports (ready for listening)
  telnet <ip> <port>                          # run on client, established connection to server <ip>:<port>, then your can run GET request to check
  nmap <ip>  or  nmap -nsP <ip>               # shows all opened ports on server, takes time to scan all 65000 ports
Application layer
  wireshark                                   # check flag rst (reset from server) or df (do not fragrment) in TCP, check if SYN reached server
  tcpdump -i <interface> host <ip>            # the same as wireshark without UI
  tcpdump -i <interface> -n icmp and net x.x.x.x/x
  dhcpdubm                                    # specifically for dhcp
  iperf3 -s (run iperf3 on server side as server mode)     
  iperf3 -c <server_ip_where_iperf_is_running> (check slowness of connection, bitrate to server)

dig <DOMAIN_NAME> +trace @1.1.1.1
dig <DOMAIN_NAME> +trace @8.8.8.8

Network namespaces
ip netns                                       # list namespaces
ip netns add foo                               # add foo namespace
ip netns add bar                               # add bar namespace
ip -n foo ip link                              # run `ip link` in foo namespace
ip netnx exec foo ip link                      # run `ip link` in foo namespace
ip link add veth-foo type veth peer name veth-bar  # create a veth pair veth-foo and veth-bar (pipe between interfaces)
ip link set veth-foo netns foo                 # attach veth-foo to foo namespace
ip link set veth-bar netns bar                 # attach veth-bar to bar namespace
ip -n foo addr add 192.168.15.1 dev veth-foo   # assign ip address to veth-foo interface
ip -n bar addr add 192.168.15.2 dev veth-bar   # assign ip address to veth-bar interface
ip -n foo link set veth-foo up                 # enable veth-foo
ip -n bar link set veth-bar up                 # enable veth-bar
