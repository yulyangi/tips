    ## Running a Web Server in a Docker Container ##
    docker container run -d --p 80:80 --name mysite1 nginx  
    docker container run -d --p 8080:80 --name mysite2 nginx  
    docker container run -d --p 8081:80 --name mysite3 nginx  
     
    # -d     => detach and run in the background
    # --name => container name, must be unique, randomly chosen from a list if it's not given
    # -p X:Y => publish a container's port to the host 
    # process listens on port Y in the container but is accessed on port X from the outside (LAN/Internet)
    # -P     => publish all exposed ports to random ports
     
    # listing local images
    docker images   # old command
    docker image ls # new command
     
    # listing all running containers
    docker ps               # old command
    docker container ls     # new command
    # -q => printing only the containers' ids
     
    # listing all containers (created, running, stopped)
    docker ps -a
    docker container ls -a
     
    # filtering by status
    docker container ls -a -f status=exited
     
    # stopping a container
    docker container stop CONTAINER_ID|CONTAINER_NAME
    Example: docker container stop mysite1
     
    # removing a container (must be stopped)
    docker container rm CONTAINER_ID|CONTAINER_NAME
    # -f => force remove the container (can be running)
    Example: docker container rm mysite1
     
    # removing all stopped containers
    docker container rm $(docker container ls -f status=exited -q)
     
    # removing an image
    docker rmi IMAGE_NAME       # => old command
    docker image rm IMAGE_NAME  # => new command
    Example: docker image rm nginx
     
    # removing dangling images, stopped containers, dangling build cache and networks not used
    docker system prune
    # -a => remove unused images, as well
